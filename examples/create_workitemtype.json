
# following should fail as nothing is there yet
./bin/alm-cli show workitemtype --name "Epic" -H localhost:8080 --pp

# should create 1 WIT with name=Epic
./bin/alm-cli create workitemtype --payload '{"name": "Epic","extendedTypeID": null,"fields": {"system.owner": {"required": true,"kind": "integer"},"system.state": {"required": true,"kind": "string"}}}' -H localhost:8080 --pp

# should show you newly created item type
./bin/alm-cli show workitemtype --name "Epic" -H localhost:8080 --pp

# create another item type
./bin/alm-cli create workitemtype --payload '{"name": "Issue","extendedTypeID": null,"fields": {"system.owner": {"required": true,"kind": "integer"},"system.state": {"required": true,"kind": "string"}}}' -H localhost:8080 --pp

# retrive newly create item type
./bin/alm-cli show workitemtype --name "Issue" -H localhost:8080 --pp

# Should fail - craete item type based on pre-existing item type becasue `system.state` does not match to parent item type
./bin/alm-cli create workitemtype --payload '{"extendedTypeName":"Epic","fields":{"system.owner":{"Type":{"Kind":"integer"},"Required":true},"system.state":{"Type":{"Kind":"user"},"Required":false}},"name":"Epic8"}' -H localhost:8080 --pp

# should craete item type based on pre-existing item type
./bin/alm-cli create workitemtype --payload '{"extendedTypeName":"Epic","fields":{"system.owner":{"Type":{"Kind":"integer"},"Required":true},"system.state":{"Type":{"Kind":"user"},"Required":false}},"name":"Epic8"}' -H localhost:8080 --pp
